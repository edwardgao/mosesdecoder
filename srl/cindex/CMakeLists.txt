
# Set output directory
FIND_PACKAGE(Threads)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

SET(LIBCINDEX_SRC 
    invdoc.hpp 
    invdoc.cpp   
	t-table.cpp
	t-table.h
    )

IF(TR1_UNORDERED_MAP_FOUND)
    IF(TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)
        ADD_DEFINITIONS(-DUSE_TR1_UNORDERED_MAP)
    ELSE (TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)
        IF (TR1_UNORDERED_MAP_USE_UNORDERED_MAP)
            ADD_DEFINITIONS(-DUSE_UNORDERED_MAP)
        ENDIF (TR1_UNORDERED_MAP_USE_UNORDERED_MAP)
    ENDIF(TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)
ELSE (TR1_UNORDERED_MAP_FOUND)
    MESSAGE(FATAL "Cannot find TR1 Unordered Map class")
ENDIF (TR1_UNORDERED_MAP_FOUND)



INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/srl/utils )


ADD_LIBRARY(cindex STATIC ${LIBCINDEX_SRC})

#set properties on the libraries
SET_TARGET_PROPERTIES(cindex PROPERTIES
    VERSION ${MOSES_VERSION}
    COMPILE_DEFINITIONS_DEBUG _DEBUG
)

SET(INDEXER_SRC
	indexer.cpp
	)

ADD_EXECUTABLE(indexer ${INDEXER_SRC})

TARGET_LINK_LIBRARIES (
    indexer
	cindex
	utils
    ${Boost_LIBRARIES}
    )


SET(QUERY_SRC
	query.cpp
	)

ADD_EXECUTABLE(query ${QUERY_SRC})

TARGET_LINK_LIBRARIES (
    query
	cindex
	utils
    ${Boost_LIBRARIES}
    )

SET(EXPAND_SRC
	cexpansion.cpp
	)

	
INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/srl/srlextract )

ADD_EXECUTABLE(cexpand ${EXPAND_SRC})

TARGET_LINK_LIBRARIES (
    cexpand
	cindex
	srl_static
	utils
	${CMAKE_THREAD_LIBS_INIT}
    ${Boost_LIBRARIES}
    )


INSTALL(TARGETS cindex cexpand
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    )

	
